{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Contact/Contact.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","redux/phonebook/phonebook-types.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","redux/phonebook/phonebook-actions.js","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","initialState","contacts","items","JSON","parse","window","localStorage","getItem","filter","combineReducers","state","type","payload","actionTypes","id","rootReducer","contactsReducer","store","createStore","composeWithDevTools","Container","children","className","s","container","Section","section","connect","contactsToContactForm","dispatch","onSubmitForm","name","number","uuidv4","addContact","useState","setName","setNumber","handleChange","e","currentTarget","value","resetLocalState","onSubmit","preventDefault","normalizedName","toLowerCase","some","contact","alert","form","autoComplete","label","pattern","title","required","onChange","input","btn","filterToFilter","filterValue","onDeleteContact","deleteContact","onClick","getVisibleContacts","normalizedFilter","trim","item","includes","contactsToContactList","contactList","map","contactItem","contactsToApp","useEffect","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b53698b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1Irs6\",\"input\":\"Filter_input__2nMV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2vEhC\",\"contactItem\":\"ContactList_contactItem__1Uxp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3gmyd\",\"btn\":\"Contact_btn__18oNn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__bqpRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__16YaF\",\"title\":\"Section_title__3aMpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Q56m\",\"label\":\"ContactForm_label__VYQLf\",\"input\":\"ContactForm_input__2x7s3\",\"btn\":\"ContactForm_btn__2_LlY\"};","const ADD_CONTACT = 'phonebook/AddContact';\r\nconst DELETE_CONTACT = 'phonebook/DeleteContact';\r\nconst CHANGE_FILTER = 'phonebook/ChangeFilter';\r\n\r\nexport default { ADD_CONTACT, DELETE_CONTACT, CHANGE_FILTER };","import { combineReducers } from 'redux';\r\nimport actionTypes from './phonebook-types';\r\n\r\nconst initialContacts = JSON.parse(window.localStorage.getItem('contacts')) ?? [];\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: initialContacts,\r\n    filter: '',\r\n  },\r\n};\r\n  \r\nconst contactsItemsReducer = (state = initialState.contacts.items, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD_CONTACT:\r\n      return [...state, payload];\r\n    \r\n    case actionTypes.DELETE_CONTACT:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nconst contactsFilterReducer = (state = initialState.contacts.filter, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.CHANGE_FILTER:\r\n      return payload;\r\n    \r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default combineReducers({\r\n  items: contactsItemsReducer,\r\n  filter: contactsFilterReducer,\r\n});","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './phonebook/phonebook-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n \r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Section;","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction ContactForm({ contactsToContactForm, onSubmitForm }) {\r\n  const [name,setName] = useState('');\r\n  const [number,setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // Проверка на повторный ввод существующего контакта\r\n    const normalizedName = name.toLowerCase();\r\n    contactsToContactForm.some(contact => contact.name.toLowerCase() === normalizedName)\r\n      ?\r\n        alert(`${name} is already in contacts.`)\r\n      : \r\n        onSubmitForm({ name, number });\r\n    resetLocalState();\r\n  };\r\n\r\n  const resetLocalState = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit} \r\n      className={s.form} \r\n      autoComplete=\"off\">\r\n      \r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n              value={name}\r\n              onChange={handleChange}\r\n              className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n              value={number}\r\n              onChange={handleChange}\r\n              className={s.input}\r\n        />\r\n      </label>        \r\n\r\n      <button type=\"submit\" className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contactsToContactForm: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitForm: ({ name, number }) => dispatch(addContact({ name, number })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  contactsToContactForm: PropTypes.arrayOf(\r\n    PropTypes.shape()).isRequired,\r\n  onSubmitForm: PropTypes.func.isRequired,\r\n};","import { v4 as uuidv4 } from 'uuid';\r\nimport actionTypes from './phonebook-types';\r\n\r\n//===== Добавление нового контакта =====\r\nexport const addContact = ({ name, number }) => {\r\n  return {\r\n    type: actionTypes.ADD_CONTACT,\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n};\r\n\r\n//===== Удаление контакта =====\r\nexport const deleteContact = id => {\r\n  return {\r\n    type: actionTypes.DELETE_CONTACT,\r\n    payload: id,\r\n  };\r\n};\r\n\r\n// ===== Изменение фильтра =====\r\nexport const changeFilter = filterValue => {\r\n  return {\r\n    type: actionTypes.CHANGE_FILTER,\r\n    payload: filterValue,\r\n  };\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction Filter({ filterToFilter, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name / number\r\n      <input\r\n        type=\"text\"\r\n        value={filterToFilter}\r\n        onChange={onChange}\r\n        className={s.input}>\r\n      </input>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filterToFilter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChange: e => dispatch(changeFilter(e.currentTarget.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  filterToFilter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Contact.module.css';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction Contact({ name, number, id, onDeleteContact }) { \r\n  return (\r\n    <>\r\n      <p className={s.contact}>• {name}: {number}</p>\r\n      <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: id => dispatch(deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Contact);\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\nimport Contact from '../Contact';\r\n\r\nfunction ContactList({ contactsToContactList }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contactsToContactList.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contactItem}>\r\n            <Contact\r\n              name={name}\r\n              number={number}\r\n              id={id}>\r\n            </Contact>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (items, filter) => {\r\n    const normalizedFilter = filter.trim().toLowerCase();\r\n\r\n    return items.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedFilter) ||\r\n      item.number.includes(filter.trim())\r\n    );\r\n  };\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contactsToContactList: getVisibleContacts(items, filter),\r\n});\r\n// const mapStateToProps = state => {\r\n//   const { items, filter } = state.contacts;\r\n//   const visibleContacts = getVisibleContacts(items, filter);\r\n\r\n//   return {\r\n//     contactsToContactList: visibleContacts,\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contactsToContactList: PropTypes.arrayOf(\r\n    PropTypes.shape()).isRequired,\r\n};","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nfunction App({ contactsToApp }) {\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contactsToApp));\n  }, [contactsToApp]);\n\n  return (\n    <Container>\n      <Section>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </Section>\n      \n      <Section>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contactsToApp: state.contacts.items,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n\nApp.propTypes = {\n  contactsToApp: PropTypes.arrayOf(\n    PropTypes.shape()).isRequired,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}