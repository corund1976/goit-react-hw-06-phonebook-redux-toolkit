{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Contact/Contact.module.css","components/Container/Container.module.css","components/Section/Section.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","initialState","contacts","items","JSON","parse","window","localStorage","getItem","filter","contactsItemsReducer","createReducer","state","contactsFilterReducer","combineReducers","middleWare","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","Container","children","className","s","container","Section","section","connect","contactsToContactForm","dispatch","onSubmitForm","useState","setName","setNumber","handleChange","e","currentTarget","value","resetLocalState","onSubmit","preventDefault","normalizedName","toLowerCase","some","contact","alert","form","autoComplete","label","type","pattern","title","required","onChange","input","btn","filterToFilter","onDeleteContact","onClick","getVisibleContacts","normalizedFilter","trim","item","includes","contactsToContactList","contactList","map","contactItem","contactsToApp","useEffect","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.846e4c2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1Irs6\",\"input\":\"Filter_input__2nMV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2vEhC\",\"contactItem\":\"ContactList_contactItem__1Uxp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3gmyd\",\"btn\":\"Contact_btn__18oNn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__bqpRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__16YaF\",\"title\":\"Section_title__3aMpM\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('phonebook/AddContact', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nexport const deleteContact = createAction('phonebook/DeleteContact');\r\n\r\nexport const changeFilter = createAction('phonebook/ChangeFilter');","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\r\n\r\nconst initialContacts = JSON.parse(window.localStorage.getItem('contacts')) ?? [];\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: initialContacts,\r\n    filter: '',\r\n  },\r\n};\r\n  \r\nconst contactsItemsReducer = createReducer(initialState.contacts.items, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst contactsFilterReducer = createReducer(initialState.contacts.filter, {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: contactsItemsReducer,\r\n  filter: contactsFilterReducer,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport contactsReducer from './phonebook/phonebook-reducer';\r\n\r\nconst middleWare = [...getDefaultMiddleware(), logger];\r\n \r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleWare: middleWare,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Section;","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction ContactForm({ contactsToContactForm, onSubmitForm }) {\r\n  const [name,setName] = useState('');\r\n  const [number,setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // Проверка на повторный ввод существующего контакта\r\n    const normalizedName = name.toLowerCase();\r\n    contactsToContactForm.some(contact => contact.name.toLowerCase() === normalizedName)\r\n      ?\r\n        alert(`${name} is already in contacts.`)\r\n      : \r\n        onSubmitForm({ name, number });\r\n    resetLocalState();\r\n  };\r\n\r\n  const resetLocalState = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit} \r\n      className={s.form} \r\n      autoComplete=\"off\">\r\n      \r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n              value={name}\r\n              onChange={handleChange}\r\n              className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n              value={number}\r\n              onChange={handleChange}\r\n              className={s.input}\r\n        />\r\n      </label>        \r\n\r\n      <button type=\"submit\" className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contactsToContactForm: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitForm: ({ name, number }) => dispatch(addContact({ name, number })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  contactsToContactForm: PropTypes.arrayOf(\r\n    PropTypes.shape()).isRequired,\r\n  onSubmitForm: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction Filter({ filterToFilter, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name / number\r\n      <input\r\n        type=\"text\"\r\n        value={filterToFilter}\r\n        onChange={onChange}\r\n        className={s.input}>\r\n      </input>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filterToFilter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChange: e => dispatch(changeFilter(e.currentTarget.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  filterToFilter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Contact.module.css';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction Contact({ name, number, id, onDeleteContact }) { \r\n  return (\r\n    <>\r\n      <p className={s.contact}>• {name}: {number}</p>\r\n      <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: id => dispatch(deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Contact);\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\nimport Contact from '../Contact';\r\n\r\nfunction ContactList({ contactsToContactList }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contactsToContactList.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contactItem}>\r\n            <Contact\r\n              name={name}\r\n              number={number}\r\n              id={id}>\r\n            </Contact>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (items, filter) => {\r\n    const normalizedFilter = filter.trim().toLowerCase();\r\n\r\n    return items.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedFilter) ||\r\n      item.number.includes(filter.trim())\r\n    );\r\n  };\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contactsToContactList: getVisibleContacts(items, filter),\r\n});\r\n// const mapStateToProps = state => {\r\n//   const { items, filter } = state.contacts;\r\n//   const visibleContacts = getVisibleContacts(items, filter);\r\n\r\n//   return {\r\n//     contactsToContactList: visibleContacts,\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contactsToContactList: PropTypes.arrayOf(\r\n    PropTypes.shape()).isRequired,\r\n};","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './App.css';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nfunction App({ contactsToApp }) {\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contactsToApp));\n  }, [contactsToApp]);\n\n  return (\n    <Container>\n      <Section>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </Section>\n      \n      <Section>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Section>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contactsToApp: state.contacts.items,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n\nApp.propTypes = {\n  contactsToApp: PropTypes.arrayOf(\n    PropTypes.shape()).isRequired,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Q56m\",\"label\":\"ContactForm_label__VYQLf\",\"input\":\"ContactForm_input__2x7s3\",\"btn\":\"ContactForm_btn__2_LlY\"};"],"sourceRoot":""}